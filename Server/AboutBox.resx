<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="logoPictureBox.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        u0JNushveRLPxZ0XxXelEQf/2Q==
</value>
  </data>
</root>